// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorkflowGraph.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_WorkflowGraph_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_WorkflowGraph_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "WorkflowNode.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_WorkflowGraph_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_WorkflowGraph_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_WorkflowGraph_2eproto;
namespace SolasMatch {
namespace Common {
namespace Protobufs {
namespace Models {
class WorkflowGraph;
class WorkflowGraphDefaultTypeInternal;
extern WorkflowGraphDefaultTypeInternal _WorkflowGraph_default_instance_;
}  // namespace Models
}  // namespace Protobufs
}  // namespace Common
}  // namespace SolasMatch
PROTOBUF_NAMESPACE_OPEN
template<> ::SolasMatch::Common::Protobufs::Models::WorkflowGraph* Arena::CreateMaybeMessage<::SolasMatch::Common::Protobufs::Models::WorkflowGraph>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace SolasMatch {
namespace Common {
namespace Protobufs {
namespace Models {

// ===================================================================

class WorkflowGraph PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SolasMatch.Common.Protobufs.Models.WorkflowGraph) */ {
 public:
  inline WorkflowGraph() : WorkflowGraph(nullptr) {};
  virtual ~WorkflowGraph();

  WorkflowGraph(const WorkflowGraph& from);
  WorkflowGraph(WorkflowGraph&& from) noexcept
    : WorkflowGraph() {
    *this = ::std::move(from);
  }

  inline WorkflowGraph& operator=(const WorkflowGraph& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkflowGraph& operator=(WorkflowGraph&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WorkflowGraph& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowGraph* internal_default_instance() {
    return reinterpret_cast<const WorkflowGraph*>(
               &_WorkflowGraph_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WorkflowGraph& a, WorkflowGraph& b) {
    a.Swap(&b);
  }
  inline void Swap(WorkflowGraph* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorkflowGraph* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WorkflowGraph* New() const final {
    return CreateMaybeMessage<WorkflowGraph>(nullptr);
  }

  WorkflowGraph* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowGraph>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WorkflowGraph& from);
  void MergeFrom(const WorkflowGraph& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowGraph* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SolasMatch.Common.Protobufs.Models.WorkflowGraph";
  }
  protected:
  explicit WorkflowGraph(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_WorkflowGraph_2eproto);
    return ::descriptor_table_WorkflowGraph_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRootNodeFieldNumber = 1,
    kAllNodesFieldNumber = 3,
    kProjectIdFieldNumber = 2,
  };
  // repeated int32 rootNode = 1;
  int rootnode_size() const;
  private:
  int _internal_rootnode_size() const;
  public:
  void clear_rootnode();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rootnode(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_rootnode() const;
  void _internal_add_rootnode(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_rootnode();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 rootnode(int index) const;
  void set_rootnode(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_rootnode(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      rootnode() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_rootnode();

  // repeated .SolasMatch.Common.Protobufs.Models.WorkflowNode allNodes = 3;
  int allnodes_size() const;
  private:
  int _internal_allnodes_size() const;
  public:
  void clear_allnodes();
  ::SolasMatch::Common::Protobufs::Models::WorkflowNode* mutable_allnodes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SolasMatch::Common::Protobufs::Models::WorkflowNode >*
      mutable_allnodes();
  private:
  const ::SolasMatch::Common::Protobufs::Models::WorkflowNode& _internal_allnodes(int index) const;
  ::SolasMatch::Common::Protobufs::Models::WorkflowNode* _internal_add_allnodes();
  public:
  const ::SolasMatch::Common::Protobufs::Models::WorkflowNode& allnodes(int index) const;
  ::SolasMatch::Common::Protobufs::Models::WorkflowNode* add_allnodes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SolasMatch::Common::Protobufs::Models::WorkflowNode >&
      allnodes() const;

  // optional int32 projectId = 2;
  bool has_projectid() const;
  private:
  bool _internal_has_projectid() const;
  public:
  void clear_projectid();
  ::PROTOBUF_NAMESPACE_ID::int32 projectid() const;
  void set_projectid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_projectid() const;
  void _internal_set_projectid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SolasMatch.Common.Protobufs.Models.WorkflowGraph)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > rootnode_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SolasMatch::Common::Protobufs::Models::WorkflowNode > allnodes_;
  ::PROTOBUF_NAMESPACE_ID::int32 projectid_;
  friend struct ::TableStruct_WorkflowGraph_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WorkflowGraph

// repeated int32 rootNode = 1;
inline int WorkflowGraph::_internal_rootnode_size() const {
  return rootnode_.size();
}
inline int WorkflowGraph::rootnode_size() const {
  return _internal_rootnode_size();
}
inline void WorkflowGraph::clear_rootnode() {
  rootnode_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WorkflowGraph::_internal_rootnode(int index) const {
  return rootnode_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WorkflowGraph::rootnode(int index) const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.WorkflowGraph.rootNode)
  return _internal_rootnode(index);
}
inline void WorkflowGraph::set_rootnode(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  rootnode_.Set(index, value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.WorkflowGraph.rootNode)
}
inline void WorkflowGraph::_internal_add_rootnode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  rootnode_.Add(value);
}
inline void WorkflowGraph::add_rootnode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_rootnode(value);
  // @@protoc_insertion_point(field_add:SolasMatch.Common.Protobufs.Models.WorkflowGraph.rootNode)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
WorkflowGraph::_internal_rootnode() const {
  return rootnode_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
WorkflowGraph::rootnode() const {
  // @@protoc_insertion_point(field_list:SolasMatch.Common.Protobufs.Models.WorkflowGraph.rootNode)
  return _internal_rootnode();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
WorkflowGraph::_internal_mutable_rootnode() {
  return &rootnode_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
WorkflowGraph::mutable_rootnode() {
  // @@protoc_insertion_point(field_mutable_list:SolasMatch.Common.Protobufs.Models.WorkflowGraph.rootNode)
  return _internal_mutable_rootnode();
}

// optional int32 projectId = 2;
inline bool WorkflowGraph::_internal_has_projectid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool WorkflowGraph::has_projectid() const {
  return _internal_has_projectid();
}
inline void WorkflowGraph::clear_projectid() {
  projectid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WorkflowGraph::_internal_projectid() const {
  return projectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WorkflowGraph::projectid() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.WorkflowGraph.projectId)
  return _internal_projectid();
}
inline void WorkflowGraph::_internal_set_projectid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  projectid_ = value;
}
inline void WorkflowGraph::set_projectid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_projectid(value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Models.WorkflowGraph.projectId)
}

// repeated .SolasMatch.Common.Protobufs.Models.WorkflowNode allNodes = 3;
inline int WorkflowGraph::_internal_allnodes_size() const {
  return allnodes_.size();
}
inline int WorkflowGraph::allnodes_size() const {
  return _internal_allnodes_size();
}
inline ::SolasMatch::Common::Protobufs::Models::WorkflowNode* WorkflowGraph::mutable_allnodes(int index) {
  // @@protoc_insertion_point(field_mutable:SolasMatch.Common.Protobufs.Models.WorkflowGraph.allNodes)
  return allnodes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SolasMatch::Common::Protobufs::Models::WorkflowNode >*
WorkflowGraph::mutable_allnodes() {
  // @@protoc_insertion_point(field_mutable_list:SolasMatch.Common.Protobufs.Models.WorkflowGraph.allNodes)
  return &allnodes_;
}
inline const ::SolasMatch::Common::Protobufs::Models::WorkflowNode& WorkflowGraph::_internal_allnodes(int index) const {
  return allnodes_.Get(index);
}
inline const ::SolasMatch::Common::Protobufs::Models::WorkflowNode& WorkflowGraph::allnodes(int index) const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Models.WorkflowGraph.allNodes)
  return _internal_allnodes(index);
}
inline ::SolasMatch::Common::Protobufs::Models::WorkflowNode* WorkflowGraph::_internal_add_allnodes() {
  return allnodes_.Add();
}
inline ::SolasMatch::Common::Protobufs::Models::WorkflowNode* WorkflowGraph::add_allnodes() {
  // @@protoc_insertion_point(field_add:SolasMatch.Common.Protobufs.Models.WorkflowGraph.allNodes)
  return _internal_add_allnodes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SolasMatch::Common::Protobufs::Models::WorkflowNode >&
WorkflowGraph::allnodes() const {
  // @@protoc_insertion_point(field_list:SolasMatch.Common.Protobufs.Models.WorkflowGraph.allNodes)
  return allnodes_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Models
}  // namespace Protobufs
}  // namespace Common
}  // namespace SolasMatch

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_WorkflowGraph_2eproto
