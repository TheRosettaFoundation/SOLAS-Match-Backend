// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EmailMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EmailMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace SolasMatch {
namespace Common {
namespace Protobufs {
namespace Emails {

namespace {

const ::google::protobuf::Descriptor* EmailMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmailMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EmailMessage_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_EmailMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_EmailMessage_2eproto() {
  protobuf_AddDesc_EmailMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EmailMessage.proto");
  GOOGLE_CHECK(file != NULL);
  EmailMessage_descriptor_ = file->message_type(0);
  static const int EmailMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmailMessage, email_type_),
  };
  EmailMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EmailMessage_descriptor_,
      EmailMessage::default_instance_,
      EmailMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmailMessage, _has_bits_[0]),
      -1,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmailMessage, _extensions_),
      sizeof(EmailMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmailMessage, _internal_metadata_),
      -1);
  EmailMessage_Type_descriptor_ = EmailMessage_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EmailMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EmailMessage_descriptor_, &EmailMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EmailMessage_2eproto() {
  delete EmailMessage::default_instance_;
  delete EmailMessage_reflection_;
}

void protobuf_AddDesc_EmailMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_EmailMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022EmailMessage.proto\022\"SolasMatch.Common."
    "Protobufs.Emails\"\240\010\n\014EmailMessage\022I\n\nema"
    "il_type\030\001 \002(\01625.SolasMatch.Common.Protob"
    "ufs.Emails.EmailMessage.Type\"\272\007\n\004Type\022\022\n"
    "\016TaskScoreEmail\020\001\022\021\n\rUserTaskClaim\020\002\022\031\n\025"
    "OrgMembershipAccepted\020\003\022\030\n\024OrgMembership"
    "Refused\020\004\022\026\n\022PasswordResetEmail\020\005\022\020\n\014Tas"
    "kArchived\020\006\022\017\n\013TaskClaimed\020\007\022\027\n\023TrackedT"
    "askUploaded\020\010\022\031\n\025OrgTaskDeadlinePassed\020\t"
    "\022!\n\035UserClaimedTaskDeadlinePassed\020\n\022\020\n\014U"
    "serFeedback\020\013\022\027\n\023UserTaskStreamEmail\020\014\022\025"
    "\n\021EmailVerification\020\r\022\017\n\013BannedLogin\020\016\022\034"
    "\n\030TrackedTaskSourceUpdated\020\017\022\027\n\023ClaimedT"
    "askUploaded\020\020\022\034\n\030ClaimedTaskSourceUpdate"
    "d\020\021\022\017\n\013OrgFeedback\020\022\022\027\n\023OrgCreatedSiteAd"
    "min\020\023\022\026\n\022OrgCreatedOrgAdmin\020\024\022\026\n\022UserRef"
    "erenceEmail\020\025\022\031\n\025UserBadgeAwardedEmail\020\026"
    "\022\025\n\021UserUnclaimedTask\020\027\022\030\n\024UserTaskRevok"
    "edEmail\020\030\022\027\n\023OrgTaskRevokedEmail\020\031\022\022\n\016Pr"
    "ojectCreated\020\032\022\021\n\rBannedFromOrg\020\033\022\037\n\033Use"
    "rBannedNotificationToOrg\020\034\022\035\n\031ProjectIma"
    "geUploadedEmail\020\035\022\034\n\030ProjectImageRemoved"
    "Email\020\036\022\035\n\031ProjectImageApprovedEmail\020\037\022 "
    "\n\034ProjectImageDisapprovedEmail\020 \022-\n)User"
    "ClaimedTaskEarlyWarningDeadlinePassed\020!\022"
    ",\n(UserClaimedTaskLateWarningDeadlinePas"
    "sed\020\"\022#\n\037UserRecordWarningDeadlinePassed"
    "\020#\022\025\n\021UserTaskCancelled\020$*\010\010d\020\200\200\200\200\002", 1115);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EmailMessage.proto", &protobuf_RegisterTypes);
  EmailMessage::default_instance_ = new EmailMessage();
  EmailMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EmailMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EmailMessage_2eproto {
  StaticDescriptorInitializer_EmailMessage_2eproto() {
    protobuf_AddDesc_EmailMessage_2eproto();
  }
} static_descriptor_initializer_EmailMessage_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* EmailMessage_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmailMessage_Type_descriptor_;
}
bool EmailMessage_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EmailMessage_Type EmailMessage::TaskScoreEmail;
const EmailMessage_Type EmailMessage::UserTaskClaim;
const EmailMessage_Type EmailMessage::OrgMembershipAccepted;
const EmailMessage_Type EmailMessage::OrgMembershipRefused;
const EmailMessage_Type EmailMessage::PasswordResetEmail;
const EmailMessage_Type EmailMessage::TaskArchived;
const EmailMessage_Type EmailMessage::TaskClaimed;
const EmailMessage_Type EmailMessage::TrackedTaskUploaded;
const EmailMessage_Type EmailMessage::OrgTaskDeadlinePassed;
const EmailMessage_Type EmailMessage::UserClaimedTaskDeadlinePassed;
const EmailMessage_Type EmailMessage::UserFeedback;
const EmailMessage_Type EmailMessage::UserTaskStreamEmail;
const EmailMessage_Type EmailMessage::EmailVerification;
const EmailMessage_Type EmailMessage::BannedLogin;
const EmailMessage_Type EmailMessage::TrackedTaskSourceUpdated;
const EmailMessage_Type EmailMessage::ClaimedTaskUploaded;
const EmailMessage_Type EmailMessage::ClaimedTaskSourceUpdated;
const EmailMessage_Type EmailMessage::OrgFeedback;
const EmailMessage_Type EmailMessage::OrgCreatedSiteAdmin;
const EmailMessage_Type EmailMessage::OrgCreatedOrgAdmin;
const EmailMessage_Type EmailMessage::UserReferenceEmail;
const EmailMessage_Type EmailMessage::UserBadgeAwardedEmail;
const EmailMessage_Type EmailMessage::UserUnclaimedTask;
const EmailMessage_Type EmailMessage::UserTaskRevokedEmail;
const EmailMessage_Type EmailMessage::OrgTaskRevokedEmail;
const EmailMessage_Type EmailMessage::ProjectCreated;
const EmailMessage_Type EmailMessage::BannedFromOrg;
const EmailMessage_Type EmailMessage::UserBannedNotificationToOrg;
const EmailMessage_Type EmailMessage::ProjectImageUploadedEmail;
const EmailMessage_Type EmailMessage::ProjectImageRemovedEmail;
const EmailMessage_Type EmailMessage::ProjectImageApprovedEmail;
const EmailMessage_Type EmailMessage::ProjectImageDisapprovedEmail;
const EmailMessage_Type EmailMessage::UserClaimedTaskEarlyWarningDeadlinePassed;
const EmailMessage_Type EmailMessage::UserClaimedTaskLateWarningDeadlinePassed;
const EmailMessage_Type EmailMessage::UserRecordWarningDeadlinePassed;
const EmailMessage_Type EmailMessage::UserTaskCancelled;
const EmailMessage_Type EmailMessage::Type_MIN;
const EmailMessage_Type EmailMessage::Type_MAX;
const int EmailMessage::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailMessage::kEmailTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailMessage::EmailMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SolasMatch.Common.Protobufs.Emails.EmailMessage)
}

void EmailMessage::InitAsDefaultInstance() {
}

EmailMessage::EmailMessage(const EmailMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SolasMatch.Common.Protobufs.Emails.EmailMessage)
}

void EmailMessage::SharedCtor() {
  _cached_size_ = 0;
  email_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EmailMessage::~EmailMessage() {
  // @@protoc_insertion_point(destructor:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  SharedDtor();
}

void EmailMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EmailMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmailMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmailMessage_descriptor_;
}

const EmailMessage& EmailMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EmailMessage_2eproto();
  return *default_instance_;
}

EmailMessage* EmailMessage::default_instance_ = NULL;

EmailMessage* EmailMessage::New(::google::protobuf::Arena* arena) const {
  EmailMessage* n = new EmailMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmailMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  _extensions_.Clear();
  email_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EmailMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .SolasMatch.Common.Protobufs.Emails.EmailMessage.Type email_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type_IsValid(value)) {
            set_email_type(static_cast< ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((800u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  return false;
#undef DO_
}

void EmailMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  // required .SolasMatch.Common.Protobufs.Emails.EmailMessage.Type email_type = 1;
  if (has_email_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->email_type(), output);
  }

  // Extension range [100, 536870912)
  _extensions_.SerializeWithCachedSizes(
      100, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SolasMatch.Common.Protobufs.Emails.EmailMessage)
}

::google::protobuf::uint8* EmailMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  // required .SolasMatch.Common.Protobufs.Emails.EmailMessage.Type email_type = 1;
  if (has_email_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->email_type(), target);
  }

  // Extension range [100, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      100, 536870912, false, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  return target;
}

int EmailMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  int total_size = 0;

  // required .SolasMatch.Common.Protobufs.Emails.EmailMessage.Type email_type = 1;
  if (has_email_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->email_type());
  }
  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmailMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EmailMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SolasMatch.Common.Protobufs.Emails.EmailMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SolasMatch.Common.Protobufs.Emails.EmailMessage)
    MergeFrom(*source);
  }
}

void EmailMessage::MergeFrom(const EmailMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_email_type()) {
      set_email_type(from.email_type());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EmailMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailMessage::CopyFrom(const EmailMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SolasMatch.Common.Protobufs.Emails.EmailMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void EmailMessage::Swap(EmailMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailMessage::InternalSwap(EmailMessage* other) {
  std::swap(email_type_, other->email_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata EmailMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmailMessage_descriptor_;
  metadata.reflection = EmailMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmailMessage

// required .SolasMatch.Common.Protobufs.Emails.EmailMessage.Type email_type = 1;
bool EmailMessage::has_email_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EmailMessage::set_has_email_type() {
  _has_bits_[0] |= 0x00000001u;
}
void EmailMessage::clear_has_email_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void EmailMessage::clear_email_type() {
  email_type_ = 1;
  clear_has_email_type();
}
 ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type EmailMessage::email_type() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Emails.EmailMessage.email_type)
  return static_cast< ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type >(email_type_);
}
 void EmailMessage::set_email_type(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type value) {
  assert(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type_IsValid(value));
  set_has_email_type();
  email_type_ = value;
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Emails.EmailMessage.email_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Emails
}  // namespace Protobufs
}  // namespace Common
}  // namespace SolasMatch

// @@protoc_insertion_point(global_scope)
