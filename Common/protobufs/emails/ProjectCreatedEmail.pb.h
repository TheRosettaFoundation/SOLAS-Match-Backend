// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProjectCreatedEmail.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProjectCreatedEmail_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ProjectCreatedEmail_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "EmailMessage.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProjectCreatedEmail_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ProjectCreatedEmail_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProjectCreatedEmail_2eproto;
namespace SolasMatch {
namespace Common {
namespace Protobufs {
namespace Emails {
class ProjectCreatedEmail;
class ProjectCreatedEmailDefaultTypeInternal;
extern ProjectCreatedEmailDefaultTypeInternal _ProjectCreatedEmail_default_instance_;
}  // namespace Emails
}  // namespace Protobufs
}  // namespace Common
}  // namespace SolasMatch
PROTOBUF_NAMESPACE_OPEN
template<> ::SolasMatch::Common::Protobufs::Emails::ProjectCreatedEmail* Arena::CreateMaybeMessage<::SolasMatch::Common::Protobufs::Emails::ProjectCreatedEmail>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace SolasMatch {
namespace Common {
namespace Protobufs {
namespace Emails {

// ===================================================================

class ProjectCreatedEmail PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail) */ {
 public:
  inline ProjectCreatedEmail() : ProjectCreatedEmail(nullptr) {};
  virtual ~ProjectCreatedEmail();

  ProjectCreatedEmail(const ProjectCreatedEmail& from);
  ProjectCreatedEmail(ProjectCreatedEmail&& from) noexcept
    : ProjectCreatedEmail() {
    *this = ::std::move(from);
  }

  inline ProjectCreatedEmail& operator=(const ProjectCreatedEmail& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProjectCreatedEmail& operator=(ProjectCreatedEmail&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProjectCreatedEmail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectCreatedEmail* internal_default_instance() {
    return reinterpret_cast<const ProjectCreatedEmail*>(
               &_ProjectCreatedEmail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProjectCreatedEmail& a, ProjectCreatedEmail& b) {
    a.Swap(&b);
  }
  inline void Swap(ProjectCreatedEmail* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProjectCreatedEmail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProjectCreatedEmail* New() const final {
    return CreateMaybeMessage<ProjectCreatedEmail>(nullptr);
  }

  ProjectCreatedEmail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProjectCreatedEmail>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProjectCreatedEmail& from);
  void MergeFrom(const ProjectCreatedEmail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectCreatedEmail* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail";
  }
  protected:
  explicit ProjectCreatedEmail(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProjectCreatedEmail_2eproto);
    return ::descriptor_table_ProjectCreatedEmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecipientEmailFieldNumber = 2,
    kProjectIdFieldNumber = 3,
    kEmailTypeFieldNumber = 1,
  };
  // required string recipient_email = 2;
  bool has_recipient_email() const;
  private:
  bool _internal_has_recipient_email() const;
  public:
  void clear_recipient_email();
  const std::string& recipient_email() const;
  void set_recipient_email(const std::string& value);
  void set_recipient_email(std::string&& value);
  void set_recipient_email(const char* value);
  void set_recipient_email(const char* value, size_t size);
  std::string* mutable_recipient_email();
  std::string* release_recipient_email();
  void set_allocated_recipient_email(std::string* recipient_email);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_recipient_email();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_recipient_email(
      std::string* recipient_email);
  private:
  const std::string& _internal_recipient_email() const;
  void _internal_set_recipient_email(const std::string& value);
  std::string* _internal_mutable_recipient_email();
  public:

  // required int32 project_id = 3;
  bool has_project_id() const;
  private:
  bool _internal_has_project_id() const;
  public:
  void clear_project_id();
  ::PROTOBUF_NAMESPACE_ID::int32 project_id() const;
  void set_project_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_project_id() const;
  void _internal_set_project_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required .SolasMatch.Common.Protobufs.Emails.EmailMessage.Type email_type = 1 [default = ProjectCreated];
  bool has_email_type() const;
  private:
  bool _internal_has_email_type() const;
  public:
  void clear_email_type();
  ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type email_type() const;
  void set_email_type(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type value);
  private:
  ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type _internal_email_type() const;
  void _internal_set_email_type(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type value);
  public:

  // @@protoc_insertion_point(class_scope:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr recipient_email_;
  ::PROTOBUF_NAMESPACE_ID::int32 project_id_;
  int email_type_;
  friend struct ::TableStruct_ProjectCreatedEmail_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProjectCreatedEmail

// required .SolasMatch.Common.Protobufs.Emails.EmailMessage.Type email_type = 1 [default = ProjectCreated];
inline bool ProjectCreatedEmail::_internal_has_email_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProjectCreatedEmail::has_email_type() const {
  return _internal_has_email_type();
}
inline void ProjectCreatedEmail::clear_email_type() {
  email_type_ = 26;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type ProjectCreatedEmail::_internal_email_type() const {
  return static_cast< ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type >(email_type_);
}
inline ::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type ProjectCreatedEmail::email_type() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.email_type)
  return _internal_email_type();
}
inline void ProjectCreatedEmail::_internal_set_email_type(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type value) {
  assert(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  email_type_ = value;
}
inline void ProjectCreatedEmail::set_email_type(::SolasMatch::Common::Protobufs::Emails::EmailMessage_Type value) {
  _internal_set_email_type(value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.email_type)
}

// required string recipient_email = 2;
inline bool ProjectCreatedEmail::_internal_has_recipient_email() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProjectCreatedEmail::has_recipient_email() const {
  return _internal_has_recipient_email();
}
inline void ProjectCreatedEmail::clear_recipient_email() {
  recipient_email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProjectCreatedEmail::recipient_email() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
  return _internal_recipient_email();
}
inline void ProjectCreatedEmail::set_recipient_email(const std::string& value) {
  _internal_set_recipient_email(value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
}
inline std::string* ProjectCreatedEmail::mutable_recipient_email() {
  // @@protoc_insertion_point(field_mutable:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
  return _internal_mutable_recipient_email();
}
inline const std::string& ProjectCreatedEmail::_internal_recipient_email() const {
  return recipient_email_.Get();
}
inline void ProjectCreatedEmail::_internal_set_recipient_email(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  recipient_email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProjectCreatedEmail::set_recipient_email(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  recipient_email_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
}
inline void ProjectCreatedEmail::set_recipient_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  recipient_email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
}
inline void ProjectCreatedEmail::set_recipient_email(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  recipient_email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
}
inline std::string* ProjectCreatedEmail::_internal_mutable_recipient_email() {
  _has_bits_[0] |= 0x00000001u;
  return recipient_email_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProjectCreatedEmail::release_recipient_email() {
  // @@protoc_insertion_point(field_release:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
  if (!_internal_has_recipient_email()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return recipient_email_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProjectCreatedEmail::set_allocated_recipient_email(std::string* recipient_email) {
  if (recipient_email != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  recipient_email_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), recipient_email,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
}
inline std::string* ProjectCreatedEmail::unsafe_arena_release_recipient_email() {
  // @@protoc_insertion_point(field_unsafe_arena_release:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return recipient_email_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProjectCreatedEmail::unsafe_arena_set_allocated_recipient_email(
    std::string* recipient_email) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (recipient_email != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  recipient_email_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      recipient_email, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.recipient_email)
}

// required int32 project_id = 3;
inline bool ProjectCreatedEmail::_internal_has_project_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProjectCreatedEmail::has_project_id() const {
  return _internal_has_project_id();
}
inline void ProjectCreatedEmail::clear_project_id() {
  project_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProjectCreatedEmail::_internal_project_id() const {
  return project_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProjectCreatedEmail::project_id() const {
  // @@protoc_insertion_point(field_get:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.project_id)
  return _internal_project_id();
}
inline void ProjectCreatedEmail::_internal_set_project_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  project_id_ = value;
}
inline void ProjectCreatedEmail::set_project_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_project_id(value);
  // @@protoc_insertion_point(field_set:SolasMatch.Common.Protobufs.Emails.ProjectCreatedEmail.project_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Emails
}  // namespace Protobufs
}  // namespace Common
}  // namespace SolasMatch

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ProjectCreatedEmail_2eproto
